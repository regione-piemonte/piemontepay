<?xml version="1.0"?>
<!--
* SPDX-FileCopyrightText: (C) Copyright 2023 Regione Piemonte
*
* SPDX-License-Identifier: EUPL-1.2
-->


<!--suppress MavenModelInspection -->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.csi.epay.epayfeapi</groupId>
	<artifactId>epayfeapi</artifactId>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<compiler-plugin.version>3.8.1</compiler-plugin.version>
		<maven.compiler.parameters>true</maven.compiler.parameters>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<quarkus-plugin.version>2.10.1.Final</quarkus-plugin.version>
		<quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
		<quarkus.platform.version>2.10.1.Final</quarkus.platform.version>
		<surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
		<swagger-codegen-maven-plugin-version>3.0.34</swagger-codegen-maven-plugin-version>
		<artifact.version>1.0.0</artifact.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>${quarkus.platform.artifact-id}</artifactId>
				<version>${quarkus.platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy-jackson</artifactId>
		</dependency>
		<dependency><!-- per le validazioni che si trovano dentro le classi generate a partire dallo yaml -->
			<groupId>io.quarkus</groupId><!-- se rimosso compila uguale ma fa mandare in 500 le chiamate agli endpoints -->
			<artifactId>quarkus-hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-health</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-health-spi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-micrometer</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-elytron-security-properties-file</artifactId>
		</dependency>
		<dependency><!-- spring -->
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-spring-di</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-spring-boot-properties</artifactId>
		</dependency>
		<dependency><!-- mybatis -->
			<groupId>io.quarkiverse.mybatis</groupId>
			<artifactId>quarkus-mybatis</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-agroal</artifactId>
		</dependency>
		<dependency><!-- Hibernate ORM specific dependencies -->
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-orm</artifactId>
		</dependency>
		<dependency><!-- JDBC driver dependencies -->
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-postgresql</artifactId>
		</dependency>
		<dependency><!-- solo per gli eventuali test -->
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency><!-- CXF -->
			<groupId>io.quarkiverse.cxf</groupId>
			<artifactId>quarkus-cxf</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxrpc-api</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.2</version>
		</dependency>
		<dependency><!-- per utilizzare i log con le api di log4j -->
			<groupId>org.jboss.logmanager</groupId>
			<artifactId>log4j-jboss-logmanager</artifactId>
		</dependency>
		<dependency><!-- serve per generare log in formato json -->
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-logging-json</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-test-security</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-fault-tolerance</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-openapi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-container-image-docker</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-security-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<dependency><!-- per il mapping -->
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.3.1.Final</version>
		</dependency>
		<dependency><!-- per il mapping -->
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>1.3.1.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-orm-panache</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5-mockito</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-test-h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency><!-- per fare funzionare i filter-->
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-security</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.11.0</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.0</version>
		</dependency>
		<dependency><!-- font per pdf -->
			<groupId>it.csi.epay</groupId>
			<artifactId>titillium-super</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency><!-- font per pdf -->
			<groupId>it.csi.epay</groupId>
			<artifactId>titillium-web</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>it.csi.epay</groupId>
			<artifactId>token-retry</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>it.csi.epay</groupId>
			<artifactId>token-retry-plugin-axis1.4</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>it.csi.epay</groupId>
			<artifactId>token-retry-plugin-axis2</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>it.csi.epay</groupId>
			<artifactId>token-retry-plugin-cxf</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>it.csi.epay</groupId>
			<artifactId>token-retry-plugin-jboss-eap</artifactId>
			<version>4.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient -->
		<dependency>
		    <groupId>commons-httpclient</groupId>
		    <artifactId>commons-httpclient</artifactId>
		    <version>3.1</version>
		</dependency>


	</dependencies>
	<build>
		<plugins>
			<plugin><!-- per la generazioni classi dallo yaml, contract first -->
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/epayfeapi_v1.yaml</inputSpec>
							<generatorName>jaxrs-spec</generatorName>
							<additionalProperties>interfaceOnly=true,useSwaggerAnnotations=false,library=quarkus,returnResponse=true</additionalProperties>
							<configOptions>
								<sourceFolder>target</sourceFolder>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<finalName>${artifactId}-${artifact.version}</finalName>
					<descriptors>
						<descriptor>tar_config.xml</descriptor>
					</descriptors>
					<tarLongFileMode>posix</tarLongFileMode>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/config</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<includes>
										<include>application.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>generate-code</goal>
							<!-- <goal>generate-code-tests</goal> -->
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${surefire-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<systemPropertyVariables>
										<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
										<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
										<maven.home>${maven.home}</maven.home>
									</systemPropertyVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<quarkus.package.type>native</quarkus.package.type>
			</properties>
		</profile>
	</profiles>
</project>
